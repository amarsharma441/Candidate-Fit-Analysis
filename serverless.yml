service: candidate-fit-analysis

frameworkVersion: '3'

custom:
  # Configuration for WSGI (Web Server Gateway Interface)
  wsgi:
    app: app.app

provider:
  # AWS provider configuration
  name: aws
  runtime: python3.11
  iamRoleStatements:
    # Permissions for DynamoDB operations
    - ${file(iamRole/JobTableIAM.yml):JobTableIAM}
    # Permissions for S3 operations
    - ${file(iamRole/TransientBucketIAM.yml):TransientBucketIAM}
    # Permissions for SQS operations
    - ${file(iamRole/QueryProcessingQueueIAM.yml):QueryProcessingQueueIAM}

functions:
  # HTTP API endpoint
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'
  
  # Function to process GPT queries from SQS
  processQuery:
    handler: Handlers/ProcessGPTQuery.processQuery
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ QueryProcessingQueue, Arn ]
          batchSize: 1
    environment:
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}  

resources:
  Resources:
    # DynamoDB table for storing candidate fit analysis data
    JobTable: ${file(AWSResources/JobTable.yml):JobTable}

    # S3 bucket for storing transient data
    TransientBucket: ${file(AWSResources/TransientBucket.yml):TransientBucket}
    
    # SQS queue for processing GPT queries
    QueryProcessingQueue: ${file(AWSResources/QueryProcessingQueue.yml):QueryProcessingQueue}

# Serverless plugins
plugins:
  - serverless-wsgi
  - serverless-python-requirements